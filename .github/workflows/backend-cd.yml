name: Backend Service Continuous Delivery

on:
  pull_request:
    branches:
      - main # Run the workflow only on pull requests to the main branch
    paths:
      - 'backend/**' # Workflow triggered on changes to code
      - '.github/workflows/backend-cd.yml'

jobs:

  sd-1-build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log Working Directory as Environment Variable
        run: |
          echo "WORKING_DIRECTORY=$(pwd)" >> $GITHUB_ENV

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Build with Maven
        run: mvn --no-transfer-progress clean install -q -DskipTests -T 5

      - name: Upload built artifact for future usage
        uses: actions/upload-artifact@v4.3.3
        with:
          name: sprawler-backend-artifact
          path: ${{env.WORKING_DIRECTORY}}/target/*.war

  sd-2-containerize:
    runs-on: ubuntu-latest
    needs: ["sd-1-build"]

    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log Working Directory as Environment Variable
        run: |
          echo "WORKING_DIRECTORY=$(pwd)" >> $GITHUB_ENV

      - name: Download built artifact
        uses: actions/download-artifact@v4
        with:
          name: sprawler-backend-artifact
          path: ${{env.WORKING_DIRECTORY}}/target

      - name: Build Docker image file
        run: |
          docker build -t sprawler-backend:latest ${{env.WORKING_DIRECTORY}}
          docker save sprawler-backend:latest -o ${{env.WORKING_DIRECTORY}}/backend-docker-image.tar

      - name: Upload built Docker image as artifact
        uses: actions/upload-artifact@v4.3.3
        with:
          name: backend-docker-image
          path: ${{env.WORKING_DIRECTORY}}/backend-docker-image.tar

  # Upload Docker image to GCP AR
  sd-3a-upload-gcp-ar:
    runs-on: ubuntu-latest
    needs: ["sd-2-containerize"]

    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-docker-image

      - name: Load Docker image
        run: |
          docker load -i backend-docker-image.tar



  # Upload Docker image to AWS ECR
  sd-3b-upload-aws-ecr:
    runs-on: ubuntu-latest
    needs: ["sd-2-containerize"]

    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-docker-image

      - name: Load Docker image
        run: |
          docker load -i backend-docker-image.tar

  # Upload Docker image to Azure ACR
  sd-3c-upload-azure-acr:
    runs-on: ubuntu-latest
    needs: ["sd-2-containerize"]

    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-docker-image

      - name: Load Docker image
        run: |
          docker load -i backend-docker-image.tar


  # Deploy published image to CR
  sd-4a-deploy-gcp-cr:
    runs-on: ubuntu-latest
    needs: ["sd-3a-upload-gcp-ar"]

    steps:
      - name: Deployment stub
        run : |
          echo "Deployment to CR"


  # Deploy published image to ECS
  sd-4b-deploy-aws-ecs:
    runs-on: ubuntu-latest
    needs: ["sd-3b-upload-aws-ecr"]

    steps:
      - name: Deployment stub
        run : |
          echo "Deployment to ECS"

  # Deploy published image to ACI
  sd-4c-deploy-azure-aci:
    runs-on: ubuntu-latest
    needs: ["sd-3c-upload-azure-acr"]

    steps:
      - name: Deployment stub
        run : |
          echo "Deployment to ACR"